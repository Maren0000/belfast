// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: GROUPINCHAPTER.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GROUPINCHAPTER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *uint32           `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ShipList         []*SHIPINCHAPTER  `protobuf:"bytes,2,rep,name=ship_list,json=shipList" json:"ship_list,omitempty"`
	Pos              *CHAPTERCELLPOS   `protobuf:"bytes,3,req,name=pos" json:"pos,omitempty"`
	LossFlag         *uint32           `protobuf:"varint,4,req,name=loss_flag,json=lossFlag" json:"loss_flag,omitempty"`
	BoxStrategyList  []*STRATEGYINFO   `protobuf:"bytes,5,rep,name=box_strategy_list,json=boxStrategyList" json:"box_strategy_list,omitempty"`
	ShipStrategyList []*STRATEGYINFO   `protobuf:"bytes,6,rep,name=ship_strategy_list,json=shipStrategyList" json:"ship_strategy_list,omitempty"`
	StrategyIds      []uint32          `protobuf:"varint,7,rep,name=strategy_ids,json=strategyIds" json:"strategy_ids,omitempty"`
	Bullet           *uint32           `protobuf:"varint,8,req,name=bullet" json:"bullet,omitempty"`
	StartPos         *CHAPTERCELLPOS   `protobuf:"bytes,9,req,name=start_pos,json=startPos" json:"start_pos,omitempty"`
	AttachList       []uint32          `protobuf:"varint,10,rep,name=attach_list,json=attachList" json:"attach_list,omitempty"`
	DamageLevel      *uint32           `protobuf:"varint,11,req,name=damage_level,json=damageLevel" json:"damage_level,omitempty"`
	BuffList         []*BUFF_INFO      `protobuf:"bytes,12,rep,name=buff_list,json=buffList" json:"buff_list,omitempty"`
	CommanderList    []*COMMANDERSINFO `protobuf:"bytes,13,rep,name=commander_list,json=commanderList" json:"commander_list,omitempty"`
	KillCount        *uint32           `protobuf:"varint,14,req,name=kill_count,json=killCount" json:"kill_count,omitempty"`
	CmdCollection    *CMDCOLLECTION    `protobuf:"bytes,15,opt,name=cmd_collection,json=cmdCollection" json:"cmd_collection,omitempty"`
	BulletMax        *uint32           `protobuf:"varint,16,req,name=bullet_max,json=bulletMax" json:"bullet_max,omitempty"`
}

func (x *GROUPINCHAPTER) Reset() {
	*x = GROUPINCHAPTER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GROUPINCHAPTER_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GROUPINCHAPTER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GROUPINCHAPTER) ProtoMessage() {}

func (x *GROUPINCHAPTER) ProtoReflect() protoreflect.Message {
	mi := &file_GROUPINCHAPTER_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GROUPINCHAPTER.ProtoReflect.Descriptor instead.
func (*GROUPINCHAPTER) Descriptor() ([]byte, []int) {
	return file_GROUPINCHAPTER_proto_rawDescGZIP(), []int{0}
}

func (x *GROUPINCHAPTER) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GROUPINCHAPTER) GetShipList() []*SHIPINCHAPTER {
	if x != nil {
		return x.ShipList
	}
	return nil
}

func (x *GROUPINCHAPTER) GetPos() *CHAPTERCELLPOS {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *GROUPINCHAPTER) GetLossFlag() uint32 {
	if x != nil && x.LossFlag != nil {
		return *x.LossFlag
	}
	return 0
}

func (x *GROUPINCHAPTER) GetBoxStrategyList() []*STRATEGYINFO {
	if x != nil {
		return x.BoxStrategyList
	}
	return nil
}

func (x *GROUPINCHAPTER) GetShipStrategyList() []*STRATEGYINFO {
	if x != nil {
		return x.ShipStrategyList
	}
	return nil
}

func (x *GROUPINCHAPTER) GetStrategyIds() []uint32 {
	if x != nil {
		return x.StrategyIds
	}
	return nil
}

func (x *GROUPINCHAPTER) GetBullet() uint32 {
	if x != nil && x.Bullet != nil {
		return *x.Bullet
	}
	return 0
}

func (x *GROUPINCHAPTER) GetStartPos() *CHAPTERCELLPOS {
	if x != nil {
		return x.StartPos
	}
	return nil
}

func (x *GROUPINCHAPTER) GetAttachList() []uint32 {
	if x != nil {
		return x.AttachList
	}
	return nil
}

func (x *GROUPINCHAPTER) GetDamageLevel() uint32 {
	if x != nil && x.DamageLevel != nil {
		return *x.DamageLevel
	}
	return 0
}

func (x *GROUPINCHAPTER) GetBuffList() []*BUFF_INFO {
	if x != nil {
		return x.BuffList
	}
	return nil
}

func (x *GROUPINCHAPTER) GetCommanderList() []*COMMANDERSINFO {
	if x != nil {
		return x.CommanderList
	}
	return nil
}

func (x *GROUPINCHAPTER) GetKillCount() uint32 {
	if x != nil && x.KillCount != nil {
		return *x.KillCount
	}
	return 0
}

func (x *GROUPINCHAPTER) GetCmdCollection() *CMDCOLLECTION {
	if x != nil {
		return x.CmdCollection
	}
	return nil
}

func (x *GROUPINCHAPTER) GetBulletMax() uint32 {
	if x != nil && x.BulletMax != nil {
		return *x.BulletMax
	}
	return 0
}

var File_GROUPINCHAPTER_proto protoreflect.FileDescriptor

var file_GROUPINCHAPTER_proto_rawDesc = []byte{
	0x0a, 0x14, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x1a,
	0x13, 0x53, 0x48, 0x49, 0x50, 0x49, 0x4e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x43, 0x45, 0x4c,
	0x4c, 0x50, 0x4f, 0x53, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x45, 0x47, 0x59, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x42, 0x55, 0x46, 0x46, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x49, 0x4e, 0x46, 0x4f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x43, 0x4d, 0x44, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x05, 0x0a, 0x0e, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x09, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x53, 0x48, 0x49, 0x50, 0x49,
	0x4e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45,
	0x52, 0x43, 0x45, 0x4c, 0x4c, 0x50, 0x4f, 0x53, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x6f, 0x73, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x41, 0x0a, 0x11, 0x62, 0x6f,
	0x78, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x0f, 0x62, 0x6f,
	0x78, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a,
	0x12, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x6c, 0x66,
	0x61, 0x73, 0x74, 0x2e, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x49, 0x4e, 0x46, 0x4f,
	0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x34, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x41, 0x50, 0x54,
	0x45, 0x52, 0x43, 0x45, 0x4c, 0x4c, 0x50, 0x4f, 0x53, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x65, 0x6c,
	0x66, 0x61, 0x73, 0x74, 0x2e, 0x42, 0x55, 0x46, 0x46, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x08,
	0x62, 0x75, 0x66, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x4f, 0x4d, 0x4d, 0x41,
	0x4e, 0x44, 0x45, 0x52, 0x53, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6d, 0x64, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x4d, 0x44, 0x43, 0x4f, 0x4c,
	0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x0d, 0x63, 0x6d, 0x64, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x10, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6c,
	0x65, 0x74, 0x4d, 0x61, 0x78, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66,
}

var (
	file_GROUPINCHAPTER_proto_rawDescOnce sync.Once
	file_GROUPINCHAPTER_proto_rawDescData = file_GROUPINCHAPTER_proto_rawDesc
)

func file_GROUPINCHAPTER_proto_rawDescGZIP() []byte {
	file_GROUPINCHAPTER_proto_rawDescOnce.Do(func() {
		file_GROUPINCHAPTER_proto_rawDescData = protoimpl.X.CompressGZIP(file_GROUPINCHAPTER_proto_rawDescData)
	})
	return file_GROUPINCHAPTER_proto_rawDescData
}

var file_GROUPINCHAPTER_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GROUPINCHAPTER_proto_goTypes = []any{
	(*GROUPINCHAPTER)(nil), // 0: belfast.GROUPINCHAPTER
	(*SHIPINCHAPTER)(nil),  // 1: belfast.SHIPINCHAPTER
	(*CHAPTERCELLPOS)(nil), // 2: belfast.CHAPTERCELLPOS
	(*STRATEGYINFO)(nil),   // 3: belfast.STRATEGYINFO
	(*BUFF_INFO)(nil),      // 4: belfast.BUFF_INFO
	(*COMMANDERSINFO)(nil), // 5: belfast.COMMANDERSINFO
	(*CMDCOLLECTION)(nil),  // 6: belfast.CMDCOLLECTION
}
var file_GROUPINCHAPTER_proto_depIdxs = []int32{
	1, // 0: belfast.GROUPINCHAPTER.ship_list:type_name -> belfast.SHIPINCHAPTER
	2, // 1: belfast.GROUPINCHAPTER.pos:type_name -> belfast.CHAPTERCELLPOS
	3, // 2: belfast.GROUPINCHAPTER.box_strategy_list:type_name -> belfast.STRATEGYINFO
	3, // 3: belfast.GROUPINCHAPTER.ship_strategy_list:type_name -> belfast.STRATEGYINFO
	2, // 4: belfast.GROUPINCHAPTER.start_pos:type_name -> belfast.CHAPTERCELLPOS
	4, // 5: belfast.GROUPINCHAPTER.buff_list:type_name -> belfast.BUFF_INFO
	5, // 6: belfast.GROUPINCHAPTER.commander_list:type_name -> belfast.COMMANDERSINFO
	6, // 7: belfast.GROUPINCHAPTER.cmd_collection:type_name -> belfast.CMDCOLLECTION
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_GROUPINCHAPTER_proto_init() }
func file_GROUPINCHAPTER_proto_init() {
	if File_GROUPINCHAPTER_proto != nil {
		return
	}
	file_SHIPINCHAPTER_proto_init()
	file_CHAPTERCELLPOS_proto_init()
	file_STRATEGYINFO_proto_init()
	file_BUFF_INFO_proto_init()
	file_COMMANDERSINFO_proto_init()
	file_CMDCOLLECTION_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_GROUPINCHAPTER_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GROUPINCHAPTER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GROUPINCHAPTER_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GROUPINCHAPTER_proto_goTypes,
		DependencyIndexes: file_GROUPINCHAPTER_proto_depIdxs,
		MessageInfos:      file_GROUPINCHAPTER_proto_msgTypes,
	}.Build()
	File_GROUPINCHAPTER_proto = out.File
	file_GROUPINCHAPTER_proto_rawDesc = nil
	file_GROUPINCHAPTER_proto_goTypes = nil
	file_GROUPINCHAPTER_proto_depIdxs = nil
}
