// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.3
// source: SC_33001.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SC_33001 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	World           *WORLDINFO           `protobuf:"bytes,1,opt,name=world" json:"world,omitempty"`
	IsWorldOpen     *uint32              `protobuf:"varint,2,req,name=is_world_open,json=isWorldOpen" json:"is_world_open,omitempty"`
	PortList        []uint32             `protobuf:"varint,3,rep,name=port_list,json=portList" json:"port_list,omitempty"`
	Camp            *uint32              `protobuf:"varint,4,req,name=camp" json:"camp,omitempty"`
	TargetList      []*WORLDTARGET       `protobuf:"bytes,5,rep,name=target_list,json=targetList" json:"target_list,omitempty"`
	TargetFetchList []*WORLDTARGET_FETCH `protobuf:"bytes,6,rep,name=target_fetch_list,json=targetFetchList" json:"target_fetch_list,omitempty"`
	CountInfo       *COUNTINFO           `protobuf:"bytes,7,req,name=count_info,json=countInfo" json:"count_info,omitempty"`
	OutShopBuyList  []*GOODS_INFO        `protobuf:"bytes,8,rep,name=out_shop_buy_list,json=outShopBuyList" json:"out_shop_buy_list,omitempty"`
	CleanChapter    []uint32             `protobuf:"varint,9,rep,name=clean_chapter,json=cleanChapter" json:"clean_chapter,omitempty"`
	ChapterAward    []*CHAPTERAWARDINFO  `protobuf:"bytes,10,rep,name=chapter_award,json=chapterAward" json:"chapter_award,omitempty"`
	FleetList       []*FLEETINFO         `protobuf:"bytes,11,rep,name=fleet_list,json=fleetList" json:"fleet_list,omitempty"`
	NewFlagPortList []uint32             `protobuf:"varint,12,rep,name=new_flag_port_list,json=newFlagPortList" json:"new_flag_port_list,omitempty"`
	GlobalFlagList  []uint32             `protobuf:"varint,13,rep,name=global_flag_list,json=globalFlagList" json:"global_flag_list,omitempty"`
}

func (x *SC_33001) Reset() {
	*x = SC_33001{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SC_33001_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_33001) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_33001) ProtoMessage() {}

func (x *SC_33001) ProtoReflect() protoreflect.Message {
	mi := &file_SC_33001_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_33001.ProtoReflect.Descriptor instead.
func (*SC_33001) Descriptor() ([]byte, []int) {
	return file_SC_33001_proto_rawDescGZIP(), []int{0}
}

func (x *SC_33001) GetWorld() *WORLDINFO {
	if x != nil {
		return x.World
	}
	return nil
}

func (x *SC_33001) GetIsWorldOpen() uint32 {
	if x != nil && x.IsWorldOpen != nil {
		return *x.IsWorldOpen
	}
	return 0
}

func (x *SC_33001) GetPortList() []uint32 {
	if x != nil {
		return x.PortList
	}
	return nil
}

func (x *SC_33001) GetCamp() uint32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *SC_33001) GetTargetList() []*WORLDTARGET {
	if x != nil {
		return x.TargetList
	}
	return nil
}

func (x *SC_33001) GetTargetFetchList() []*WORLDTARGET_FETCH {
	if x != nil {
		return x.TargetFetchList
	}
	return nil
}

func (x *SC_33001) GetCountInfo() *COUNTINFO {
	if x != nil {
		return x.CountInfo
	}
	return nil
}

func (x *SC_33001) GetOutShopBuyList() []*GOODS_INFO {
	if x != nil {
		return x.OutShopBuyList
	}
	return nil
}

func (x *SC_33001) GetCleanChapter() []uint32 {
	if x != nil {
		return x.CleanChapter
	}
	return nil
}

func (x *SC_33001) GetChapterAward() []*CHAPTERAWARDINFO {
	if x != nil {
		return x.ChapterAward
	}
	return nil
}

func (x *SC_33001) GetFleetList() []*FLEETINFO {
	if x != nil {
		return x.FleetList
	}
	return nil
}

func (x *SC_33001) GetNewFlagPortList() []uint32 {
	if x != nil {
		return x.NewFlagPortList
	}
	return nil
}

func (x *SC_33001) GetGlobalFlagList() []uint32 {
	if x != nil {
		return x.GlobalFlagList
	}
	return nil
}

var File_SC_33001_proto protoreflect.FileDescriptor

var file_SC_33001_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x33, 0x33, 0x30, 0x30, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x1a, 0x0f, 0x57, 0x4f, 0x52, 0x4c, 0x44,
	0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x57,
	0x4f, 0x52, 0x4c, 0x44, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x54, 0x43, 0x48,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x49, 0x4e, 0x46,
	0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x43, 0x48, 0x41, 0x50, 0x54,
	0x45, 0x52, 0x41, 0x57, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0f, 0x46, 0x4c, 0x45, 0x45, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xea, 0x04, 0x0a, 0x08, 0x53, 0x43, 0x5f, 0x33, 0x33, 0x30, 0x30, 0x31, 0x12,
	0x28, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x49, 0x4e,
	0x46, 0x4f, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0b, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x12, 0x35,
	0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x57, 0x4f,
	0x52, 0x4c, 0x44, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x57, 0x4f, 0x52, 0x4c, 0x44,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x54, 0x43, 0x48, 0x52, 0x0f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3e, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x62, 0x75, 0x79,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65,
	0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x47, 0x4f, 0x4f, 0x44, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x52, 0x0e, 0x6f, 0x75, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x41, 0x57,
	0x41, 0x52, 0x44, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x65, 0x6c, 0x66,
	0x61, 0x73, 0x74, 0x2e, 0x46, 0x4c, 0x45, 0x45, 0x54, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x09, 0x66,
	0x6c, 0x65, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x50, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
}

var (
	file_SC_33001_proto_rawDescOnce sync.Once
	file_SC_33001_proto_rawDescData = file_SC_33001_proto_rawDesc
)

func file_SC_33001_proto_rawDescGZIP() []byte {
	file_SC_33001_proto_rawDescOnce.Do(func() {
		file_SC_33001_proto_rawDescData = protoimpl.X.CompressGZIP(file_SC_33001_proto_rawDescData)
	})
	return file_SC_33001_proto_rawDescData
}

var file_SC_33001_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_SC_33001_proto_goTypes = []interface{}{
	(*SC_33001)(nil),          // 0: belfast.SC_33001
	(*WORLDINFO)(nil),         // 1: belfast.WORLDINFO
	(*WORLDTARGET)(nil),       // 2: belfast.WORLDTARGET
	(*WORLDTARGET_FETCH)(nil), // 3: belfast.WORLDTARGET_FETCH
	(*COUNTINFO)(nil),         // 4: belfast.COUNTINFO
	(*GOODS_INFO)(nil),        // 5: belfast.GOODS_INFO
	(*CHAPTERAWARDINFO)(nil),  // 6: belfast.CHAPTERAWARDINFO
	(*FLEETINFO)(nil),         // 7: belfast.FLEETINFO
}
var file_SC_33001_proto_depIdxs = []int32{
	1, // 0: belfast.SC_33001.world:type_name -> belfast.WORLDINFO
	2, // 1: belfast.SC_33001.target_list:type_name -> belfast.WORLDTARGET
	3, // 2: belfast.SC_33001.target_fetch_list:type_name -> belfast.WORLDTARGET_FETCH
	4, // 3: belfast.SC_33001.count_info:type_name -> belfast.COUNTINFO
	5, // 4: belfast.SC_33001.out_shop_buy_list:type_name -> belfast.GOODS_INFO
	6, // 5: belfast.SC_33001.chapter_award:type_name -> belfast.CHAPTERAWARDINFO
	7, // 6: belfast.SC_33001.fleet_list:type_name -> belfast.FLEETINFO
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_SC_33001_proto_init() }
func file_SC_33001_proto_init() {
	if File_SC_33001_proto != nil {
		return
	}
	file_WORLDINFO_proto_init()
	file_WORLDTARGET_proto_init()
	file_WORLDTARGET_FETCH_proto_init()
	file_COUNTINFO_proto_init()
	file_GOODS_INFO_proto_init()
	file_CHAPTERAWARDINFO_proto_init()
	file_FLEETINFO_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SC_33001_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_33001); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SC_33001_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SC_33001_proto_goTypes,
		DependencyIndexes: file_SC_33001_proto_depIdxs,
		MessageInfos:      file_SC_33001_proto_msgTypes,
	}.Build()
	File_SC_33001_proto = out.File
	file_SC_33001_proto_rawDesc = nil
	file_SC_33001_proto_goTypes = nil
	file_SC_33001_proto_depIdxs = nil
}
