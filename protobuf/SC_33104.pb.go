// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.3
// source: SC_33104.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SC_33104 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result            *uint32               `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	MovePath          []*CHAPTERCELLPOS     `protobuf:"bytes,2,rep,name=move_path,json=movePath" json:"move_path,omitempty"`
	DropList          []*DROPINFO           `protobuf:"bytes,3,rep,name=drop_list,json=dropList" json:"drop_list,omitempty"`
	EnterMapId        *uint32               `protobuf:"varint,4,opt,name=enter_map_id,json=enterMapId" json:"enter_map_id,omitempty"`
	ShipUpdate        []*SHIPINCHAPTER      `protobuf:"bytes,5,rep,name=ship_update,json=shipUpdate" json:"ship_update,omitempty"`
	AiActList         []*AI_ACT             `protobuf:"bytes,6,rep,name=ai_act_list,json=aiActList" json:"ai_act_list,omitempty"`
	Id                *WORLDMAPID           `protobuf:"bytes,7,opt,name=id" json:"id,omitempty"`
	LandList          []*LANDINFO           `protobuf:"bytes,8,rep,name=land_list,json=landList" json:"land_list,omitempty"`
	GroupUpdate       []*GROUPINFOUPDATE    `protobuf:"bytes,9,rep,name=group_update,json=groupUpdate" json:"group_update,omitempty"`
	EventId           *uint32               `protobuf:"varint,10,req,name=event_id,json=eventId" json:"event_id,omitempty"`
	PosList           []*WORLDPOSINFO       `protobuf:"bytes,11,rep,name=pos_list,json=posList" json:"pos_list,omitempty"`
	ActionPower       *uint32               `protobuf:"varint,12,opt,name=action_power,json=actionPower" json:"action_power,omitempty"`
	ActionPowerExtra  *uint32               `protobuf:"varint,13,opt,name=action_power_extra,json=actionPowerExtra" json:"action_power_extra,omitempty"`
	TargetList        []*WORLDTARGET        `protobuf:"bytes,14,rep,name=target_list,json=targetList" json:"target_list,omitempty"`
	CmdCollectionList []*GROUPCMDCOLLECTION `protobuf:"bytes,15,rep,name=cmd_collection_list,json=cmdCollectionList" json:"cmd_collection_list,omitempty"`
}

func (x *SC_33104) Reset() {
	*x = SC_33104{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SC_33104_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_33104) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_33104) ProtoMessage() {}

func (x *SC_33104) ProtoReflect() protoreflect.Message {
	mi := &file_SC_33104_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_33104.ProtoReflect.Descriptor instead.
func (*SC_33104) Descriptor() ([]byte, []int) {
	return file_SC_33104_proto_rawDescGZIP(), []int{0}
}

func (x *SC_33104) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *SC_33104) GetMovePath() []*CHAPTERCELLPOS {
	if x != nil {
		return x.MovePath
	}
	return nil
}

func (x *SC_33104) GetDropList() []*DROPINFO {
	if x != nil {
		return x.DropList
	}
	return nil
}

func (x *SC_33104) GetEnterMapId() uint32 {
	if x != nil && x.EnterMapId != nil {
		return *x.EnterMapId
	}
	return 0
}

func (x *SC_33104) GetShipUpdate() []*SHIPINCHAPTER {
	if x != nil {
		return x.ShipUpdate
	}
	return nil
}

func (x *SC_33104) GetAiActList() []*AI_ACT {
	if x != nil {
		return x.AiActList
	}
	return nil
}

func (x *SC_33104) GetId() *WORLDMAPID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SC_33104) GetLandList() []*LANDINFO {
	if x != nil {
		return x.LandList
	}
	return nil
}

func (x *SC_33104) GetGroupUpdate() []*GROUPINFOUPDATE {
	if x != nil {
		return x.GroupUpdate
	}
	return nil
}

func (x *SC_33104) GetEventId() uint32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *SC_33104) GetPosList() []*WORLDPOSINFO {
	if x != nil {
		return x.PosList
	}
	return nil
}

func (x *SC_33104) GetActionPower() uint32 {
	if x != nil && x.ActionPower != nil {
		return *x.ActionPower
	}
	return 0
}

func (x *SC_33104) GetActionPowerExtra() uint32 {
	if x != nil && x.ActionPowerExtra != nil {
		return *x.ActionPowerExtra
	}
	return 0
}

func (x *SC_33104) GetTargetList() []*WORLDTARGET {
	if x != nil {
		return x.TargetList
	}
	return nil
}

func (x *SC_33104) GetCmdCollectionList() []*GROUPCMDCOLLECTION {
	if x != nil {
		return x.CmdCollectionList
	}
	return nil
}

var File_SC_33104_proto protoreflect.FileDescriptor

var file_SC_33104_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x33, 0x33, 0x31, 0x30, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x1a, 0x14, 0x43, 0x48, 0x41, 0x50, 0x54,
	0x45, 0x52, 0x43, 0x45, 0x4c, 0x4c, 0x50, 0x4f, 0x53, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0e, 0x44, 0x52, 0x4f, 0x50, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x53, 0x48, 0x49, 0x50, 0x49, 0x4e, 0x43, 0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x41, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x4d, 0x41, 0x50, 0x49, 0x44, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x4c, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e, 0x46, 0x4f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x57, 0x4f, 0x52,
	0x4c, 0x44, 0x50, 0x4f, 0x53, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x43, 0x4d, 0x44, 0x43, 0x4f, 0x4c, 0x4c,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x05, 0x0a,
	0x08, 0x53, 0x43, 0x5f, 0x33, 0x33, 0x31, 0x30, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43,
	0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x43, 0x45, 0x4c, 0x4c, 0x50, 0x4f, 0x53, 0x52, 0x08, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x6c,
	0x66, 0x61, 0x73, 0x74, 0x2e, 0x44, 0x52, 0x4f, 0x50, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x08, 0x64,
	0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x53, 0x48, 0x49, 0x50, 0x49, 0x4e, 0x43,
	0x48, 0x41, 0x50, 0x54, 0x45, 0x52, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x61, 0x69, 0x5f, 0x61, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x41, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x52, 0x09, 0x61, 0x69, 0x41, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x4d,
	0x41, 0x50, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65,
	0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x4c, 0x41, 0x4e, 0x44, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x49, 0x4e,
	0x46, 0x4f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x57, 0x4f, 0x52,
	0x4c, 0x44, 0x50, 0x4f, 0x53, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x35, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61,
	0x73, 0x74, 0x2e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x52, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x6d,
	0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x43, 0x4d, 0x44, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x11, 0x63, 0x6d, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66,
}

var (
	file_SC_33104_proto_rawDescOnce sync.Once
	file_SC_33104_proto_rawDescData = file_SC_33104_proto_rawDesc
)

func file_SC_33104_proto_rawDescGZIP() []byte {
	file_SC_33104_proto_rawDescOnce.Do(func() {
		file_SC_33104_proto_rawDescData = protoimpl.X.CompressGZIP(file_SC_33104_proto_rawDescData)
	})
	return file_SC_33104_proto_rawDescData
}

var file_SC_33104_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_SC_33104_proto_goTypes = []interface{}{
	(*SC_33104)(nil),           // 0: belfast.SC_33104
	(*CHAPTERCELLPOS)(nil),     // 1: belfast.CHAPTERCELLPOS
	(*DROPINFO)(nil),           // 2: belfast.DROPINFO
	(*SHIPINCHAPTER)(nil),      // 3: belfast.SHIPINCHAPTER
	(*AI_ACT)(nil),             // 4: belfast.AI_ACT
	(*WORLDMAPID)(nil),         // 5: belfast.WORLDMAPID
	(*LANDINFO)(nil),           // 6: belfast.LANDINFO
	(*GROUPINFOUPDATE)(nil),    // 7: belfast.GROUPINFOUPDATE
	(*WORLDPOSINFO)(nil),       // 8: belfast.WORLDPOSINFO
	(*WORLDTARGET)(nil),        // 9: belfast.WORLDTARGET
	(*GROUPCMDCOLLECTION)(nil), // 10: belfast.GROUPCMDCOLLECTION
}
var file_SC_33104_proto_depIdxs = []int32{
	1,  // 0: belfast.SC_33104.move_path:type_name -> belfast.CHAPTERCELLPOS
	2,  // 1: belfast.SC_33104.drop_list:type_name -> belfast.DROPINFO
	3,  // 2: belfast.SC_33104.ship_update:type_name -> belfast.SHIPINCHAPTER
	4,  // 3: belfast.SC_33104.ai_act_list:type_name -> belfast.AI_ACT
	5,  // 4: belfast.SC_33104.id:type_name -> belfast.WORLDMAPID
	6,  // 5: belfast.SC_33104.land_list:type_name -> belfast.LANDINFO
	7,  // 6: belfast.SC_33104.group_update:type_name -> belfast.GROUPINFOUPDATE
	8,  // 7: belfast.SC_33104.pos_list:type_name -> belfast.WORLDPOSINFO
	9,  // 8: belfast.SC_33104.target_list:type_name -> belfast.WORLDTARGET
	10, // 9: belfast.SC_33104.cmd_collection_list:type_name -> belfast.GROUPCMDCOLLECTION
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_SC_33104_proto_init() }
func file_SC_33104_proto_init() {
	if File_SC_33104_proto != nil {
		return
	}
	file_CHAPTERCELLPOS_proto_init()
	file_DROPINFO_proto_init()
	file_SHIPINCHAPTER_proto_init()
	file_AI_ACT_proto_init()
	file_WORLDMAPID_proto_init()
	file_LANDINFO_proto_init()
	file_GROUPINFOUPDATE_proto_init()
	file_WORLDPOSINFO_proto_init()
	file_WORLDTARGET_proto_init()
	file_GROUPCMDCOLLECTION_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SC_33104_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_33104); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SC_33104_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SC_33104_proto_goTypes,
		DependencyIndexes: file_SC_33104_proto_depIdxs,
		MessageInfos:      file_SC_33104_proto_msgTypes,
	}.Build()
	File_SC_33104_proto = out.File
	file_SC_33104_proto_rawDesc = nil
	file_SC_33104_proto_goTypes = nil
	file_SC_33104_proto_depIdxs = nil
}
