// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: CHILD_INFO.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CHILD_INFO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tid                     *uint32                `protobuf:"varint,1,req,name=tid" json:"tid,omitempty"`
	CurTime                 *CHILD_TIME            `protobuf:"bytes,2,req,name=cur_time,json=curTime" json:"cur_time,omitempty"`
	Mood                    *uint32                `protobuf:"varint,3,req,name=mood" json:"mood,omitempty"`
	Money                   *uint32                `protobuf:"varint,4,req,name=money" json:"money,omitempty"`
	SiteNumber              *uint32                `protobuf:"varint,5,req,name=site_number,json=siteNumber" json:"site_number,omitempty"`
	Attrs                   []*CHILD_ATTR          `protobuf:"bytes,6,rep,name=attrs" json:"attrs,omitempty"`
	Favor                   *CHILD_FAVOR           `protobuf:"bytes,7,req,name=favor" json:"favor,omitempty"`
	Items                   []*CHILD_ITEM          `protobuf:"bytes,8,rep,name=items" json:"items,omitempty"`
	PlanHistory             []*CHILD_PLAN_HISTORY  `protobuf:"bytes,9,rep,name=plan_history,json=planHistory" json:"plan_history,omitempty"`
	Memorys                 []uint32               `protobuf:"varint,10,rep,name=memorys" json:"memorys,omitempty"`
	Plans                   []*CHILD_PLAN_CELL     `protobuf:"bytes,11,rep,name=plans" json:"plans,omitempty"`
	Polaroids               []*CHILD_POLAROID      `protobuf:"bytes,12,rep,name=polaroids" json:"polaroids,omitempty"`
	Target                  *uint32                `protobuf:"varint,13,req,name=target" json:"target,omitempty"`
	Tasks                   []*CHILD_TASK          `protobuf:"bytes,14,rep,name=tasks" json:"tasks,omitempty"`
	RealizedWish            []uint32               `protobuf:"varint,15,rep,name=realized_wish,json=realizedWish" json:"realized_wish,omitempty"`
	Buffs                   []*CHILD_BUFF          `protobuf:"bytes,16,rep,name=buffs" json:"buffs,omitempty"`
	UserName                *string                `protobuf:"bytes,17,req,name=user_name,json=userName" json:"user_name,omitempty"`
	SpecEvents              []uint32               `protobuf:"varint,18,rep,name=spec_events,json=specEvents" json:"spec_events,omitempty"`
	CanTriggerHomeEvent     *uint32                `protobuf:"varint,19,req,name=can_trigger_home_event,json=canTriggerHomeEvent" json:"can_trigger_home_event,omitempty"`
	HomeEvents              []uint32               `protobuf:"varint,20,rep,name=home_events,json=homeEvents" json:"home_events,omitempty"`
	DiscountEventId         []uint32               `protobuf:"varint,21,rep,name=discount_event_id,json=discountEventId" json:"discount_event_id,omitempty"`
	Shop                    []*CHILD_SHOP_DATA     `protobuf:"bytes,22,rep,name=shop" json:"shop,omitempty"`
	OptionRecords           []*CHILD_OPTION_RECORD `protobuf:"bytes,23,rep,name=option_records,json=optionRecords" json:"option_records,omitempty"`
	FavorAwardHistory       []uint32               `protobuf:"varint,24,rep,name=favor_award_history,json=favorAwardHistory" json:"favor_award_history,omitempty"`
	IsEnding                *uint32                `protobuf:"varint,25,req,name=is_ending,json=isEnding" json:"is_ending,omitempty"`
	NewGamePlusCount        *uint32                `protobuf:"varint,26,req,name=new_game_plus_count,json=newGamePlusCount" json:"new_game_plus_count,omitempty"`
	HadTargetStageAward     *uint32                `protobuf:"varint,27,req,name=had_target_stage_award,json=hadTargetStageAward" json:"had_target_stage_award,omitempty"`
	HadAdjustment           *uint32                `protobuf:"varint,28,req,name=had_adjustment,json=hadAdjustment" json:"had_adjustment,omitempty"`
	IsSpecialSecretaryValid *uint32                `protobuf:"varint,29,req,name=is_special_secretary_valid,json=isSpecialSecretaryValid" json:"is_special_secretary_valid,omitempty"`
}

func (x *CHILD_INFO) Reset() {
	*x = CHILD_INFO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CHILD_INFO_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CHILD_INFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHILD_INFO) ProtoMessage() {}

func (x *CHILD_INFO) ProtoReflect() protoreflect.Message {
	mi := &file_CHILD_INFO_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHILD_INFO.ProtoReflect.Descriptor instead.
func (*CHILD_INFO) Descriptor() ([]byte, []int) {
	return file_CHILD_INFO_proto_rawDescGZIP(), []int{0}
}

func (x *CHILD_INFO) GetTid() uint32 {
	if x != nil && x.Tid != nil {
		return *x.Tid
	}
	return 0
}

func (x *CHILD_INFO) GetCurTime() *CHILD_TIME {
	if x != nil {
		return x.CurTime
	}
	return nil
}

func (x *CHILD_INFO) GetMood() uint32 {
	if x != nil && x.Mood != nil {
		return *x.Mood
	}
	return 0
}

func (x *CHILD_INFO) GetMoney() uint32 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *CHILD_INFO) GetSiteNumber() uint32 {
	if x != nil && x.SiteNumber != nil {
		return *x.SiteNumber
	}
	return 0
}

func (x *CHILD_INFO) GetAttrs() []*CHILD_ATTR {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *CHILD_INFO) GetFavor() *CHILD_FAVOR {
	if x != nil {
		return x.Favor
	}
	return nil
}

func (x *CHILD_INFO) GetItems() []*CHILD_ITEM {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CHILD_INFO) GetPlanHistory() []*CHILD_PLAN_HISTORY {
	if x != nil {
		return x.PlanHistory
	}
	return nil
}

func (x *CHILD_INFO) GetMemorys() []uint32 {
	if x != nil {
		return x.Memorys
	}
	return nil
}

func (x *CHILD_INFO) GetPlans() []*CHILD_PLAN_CELL {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *CHILD_INFO) GetPolaroids() []*CHILD_POLAROID {
	if x != nil {
		return x.Polaroids
	}
	return nil
}

func (x *CHILD_INFO) GetTarget() uint32 {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return 0
}

func (x *CHILD_INFO) GetTasks() []*CHILD_TASK {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *CHILD_INFO) GetRealizedWish() []uint32 {
	if x != nil {
		return x.RealizedWish
	}
	return nil
}

func (x *CHILD_INFO) GetBuffs() []*CHILD_BUFF {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *CHILD_INFO) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *CHILD_INFO) GetSpecEvents() []uint32 {
	if x != nil {
		return x.SpecEvents
	}
	return nil
}

func (x *CHILD_INFO) GetCanTriggerHomeEvent() uint32 {
	if x != nil && x.CanTriggerHomeEvent != nil {
		return *x.CanTriggerHomeEvent
	}
	return 0
}

func (x *CHILD_INFO) GetHomeEvents() []uint32 {
	if x != nil {
		return x.HomeEvents
	}
	return nil
}

func (x *CHILD_INFO) GetDiscountEventId() []uint32 {
	if x != nil {
		return x.DiscountEventId
	}
	return nil
}

func (x *CHILD_INFO) GetShop() []*CHILD_SHOP_DATA {
	if x != nil {
		return x.Shop
	}
	return nil
}

func (x *CHILD_INFO) GetOptionRecords() []*CHILD_OPTION_RECORD {
	if x != nil {
		return x.OptionRecords
	}
	return nil
}

func (x *CHILD_INFO) GetFavorAwardHistory() []uint32 {
	if x != nil {
		return x.FavorAwardHistory
	}
	return nil
}

func (x *CHILD_INFO) GetIsEnding() uint32 {
	if x != nil && x.IsEnding != nil {
		return *x.IsEnding
	}
	return 0
}

func (x *CHILD_INFO) GetNewGamePlusCount() uint32 {
	if x != nil && x.NewGamePlusCount != nil {
		return *x.NewGamePlusCount
	}
	return 0
}

func (x *CHILD_INFO) GetHadTargetStageAward() uint32 {
	if x != nil && x.HadTargetStageAward != nil {
		return *x.HadTargetStageAward
	}
	return 0
}

func (x *CHILD_INFO) GetHadAdjustment() uint32 {
	if x != nil && x.HadAdjustment != nil {
		return *x.HadAdjustment
	}
	return 0
}

func (x *CHILD_INFO) GetIsSpecialSecretaryValid() uint32 {
	if x != nil && x.IsSpecialSecretaryValid != nil {
		return *x.IsSpecialSecretaryValid
	}
	return 0
}

var File_CHILD_INFO_proto protoreflect.FileDescriptor

var file_CHILD_INFO_proto_rawDesc = []byte{
	0x0a, 0x10, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x1a, 0x10, 0x43, 0x48, 0x49,
	0x4c, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x43,
	0x48, 0x49, 0x4c, 0x44, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x46, 0x41, 0x56, 0x4f, 0x52, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4f, 0x4c,
	0x41, 0x52, 0x4f, 0x49, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x43, 0x48, 0x49,
	0x4c, 0x44, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x43,
	0x48, 0x49, 0x4c, 0x44, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb7, 0x09, 0x0a, 0x0a, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x74,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43,
	0x48, 0x49, 0x4c, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x07, 0x63, 0x75, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x04, 0x6d, 0x6f, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62,
	0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x41, 0x54, 0x54,
	0x52, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x66, 0x61, 0x76, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x46, 0x41, 0x56, 0x4f, 0x52, 0x52, 0x05, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48,
	0x49, 0x4c, 0x44, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x3e, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e,
	0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f,
	0x52, 0x59, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x6c, 0x61,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61,
	0x73, 0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x43, 0x45,
	0x4c, 0x4c, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x6f, 0x6c,
	0x61, 0x72, 0x6f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62,
	0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x50, 0x4f, 0x4c,
	0x41, 0x52, 0x4f, 0x49, 0x44, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x6f, 0x69, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x52, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f,
	0x77, 0x69, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x57, 0x69, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x75, 0x66, 0x66,
	0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x42, 0x55, 0x46, 0x46, 0x52, 0x05, 0x62, 0x75,
	0x66, 0x66, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x11, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x13, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x6f, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x16, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c,
	0x44, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x52, 0x04, 0x73, 0x68, 0x6f,
	0x70, 0x12, 0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x6c, 0x66,
	0x61, 0x73, 0x74, 0x2e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x52, 0x0d, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x5f,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x18, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x41, 0x77, 0x61, 0x72, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x19, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x6c, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x10, 0x6e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x61, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x1b, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x13, 0x68, 0x61, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x64, 0x5f, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x0d, 0x68, 0x61, 0x64, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b,
	0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x1d, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x17, 0x69, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x0c, 0x5a, 0x0a, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
}

var (
	file_CHILD_INFO_proto_rawDescOnce sync.Once
	file_CHILD_INFO_proto_rawDescData = file_CHILD_INFO_proto_rawDesc
)

func file_CHILD_INFO_proto_rawDescGZIP() []byte {
	file_CHILD_INFO_proto_rawDescOnce.Do(func() {
		file_CHILD_INFO_proto_rawDescData = protoimpl.X.CompressGZIP(file_CHILD_INFO_proto_rawDescData)
	})
	return file_CHILD_INFO_proto_rawDescData
}

var file_CHILD_INFO_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_CHILD_INFO_proto_goTypes = []any{
	(*CHILD_INFO)(nil),          // 0: belfast.CHILD_INFO
	(*CHILD_TIME)(nil),          // 1: belfast.CHILD_TIME
	(*CHILD_ATTR)(nil),          // 2: belfast.CHILD_ATTR
	(*CHILD_FAVOR)(nil),         // 3: belfast.CHILD_FAVOR
	(*CHILD_ITEM)(nil),          // 4: belfast.CHILD_ITEM
	(*CHILD_PLAN_HISTORY)(nil),  // 5: belfast.CHILD_PLAN_HISTORY
	(*CHILD_PLAN_CELL)(nil),     // 6: belfast.CHILD_PLAN_CELL
	(*CHILD_POLAROID)(nil),      // 7: belfast.CHILD_POLAROID
	(*CHILD_TASK)(nil),          // 8: belfast.CHILD_TASK
	(*CHILD_BUFF)(nil),          // 9: belfast.CHILD_BUFF
	(*CHILD_SHOP_DATA)(nil),     // 10: belfast.CHILD_SHOP_DATA
	(*CHILD_OPTION_RECORD)(nil), // 11: belfast.CHILD_OPTION_RECORD
}
var file_CHILD_INFO_proto_depIdxs = []int32{
	1,  // 0: belfast.CHILD_INFO.cur_time:type_name -> belfast.CHILD_TIME
	2,  // 1: belfast.CHILD_INFO.attrs:type_name -> belfast.CHILD_ATTR
	3,  // 2: belfast.CHILD_INFO.favor:type_name -> belfast.CHILD_FAVOR
	4,  // 3: belfast.CHILD_INFO.items:type_name -> belfast.CHILD_ITEM
	5,  // 4: belfast.CHILD_INFO.plan_history:type_name -> belfast.CHILD_PLAN_HISTORY
	6,  // 5: belfast.CHILD_INFO.plans:type_name -> belfast.CHILD_PLAN_CELL
	7,  // 6: belfast.CHILD_INFO.polaroids:type_name -> belfast.CHILD_POLAROID
	8,  // 7: belfast.CHILD_INFO.tasks:type_name -> belfast.CHILD_TASK
	9,  // 8: belfast.CHILD_INFO.buffs:type_name -> belfast.CHILD_BUFF
	10, // 9: belfast.CHILD_INFO.shop:type_name -> belfast.CHILD_SHOP_DATA
	11, // 10: belfast.CHILD_INFO.option_records:type_name -> belfast.CHILD_OPTION_RECORD
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_CHILD_INFO_proto_init() }
func file_CHILD_INFO_proto_init() {
	if File_CHILD_INFO_proto != nil {
		return
	}
	file_CHILD_TIME_proto_init()
	file_CHILD_ATTR_proto_init()
	file_CHILD_FAVOR_proto_init()
	file_CHILD_ITEM_proto_init()
	file_CHILD_PLAN_HISTORY_proto_init()
	file_CHILD_PLAN_CELL_proto_init()
	file_CHILD_POLAROID_proto_init()
	file_CHILD_TASK_proto_init()
	file_CHILD_BUFF_proto_init()
	file_CHILD_SHOP_DATA_proto_init()
	file_CHILD_OPTION_RECORD_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_CHILD_INFO_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CHILD_INFO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CHILD_INFO_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CHILD_INFO_proto_goTypes,
		DependencyIndexes: file_CHILD_INFO_proto_depIdxs,
		MessageInfos:      file_CHILD_INFO_proto_msgTypes,
	}.Build()
	File_CHILD_INFO_proto = out.File
	file_CHILD_INFO_proto_rawDesc = nil
	file_CHILD_INFO_proto_goTypes = nil
	file_CHILD_INFO_proto_depIdxs = nil
}
