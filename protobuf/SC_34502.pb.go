// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.3
// source: SC_34502.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SC_34502 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightCount           *uint32           `protobuf:"varint,1,req,name=fight_count,json=fightCount" json:"fight_count,omitempty"`
	FightCountUpdateTime *uint32           `protobuf:"varint,2,req,name=fight_count_update_time,json=fightCountUpdateTime" json:"fight_count_update_time,omitempty"`
	SelfBoss             *WORLDBOSS_INFO   `protobuf:"bytes,3,opt,name=self_boss,json=selfBoss" json:"self_boss,omitempty"`
	OtherBoss            []*WORLDBOSS_INFO `protobuf:"bytes,4,rep,name=other_boss,json=otherBoss" json:"other_boss,omitempty"`
	SummonPt             *uint32           `protobuf:"varint,5,req,name=summon_pt,json=summonPt" json:"summon_pt,omitempty"`
	SummonPtOld          *uint32           `protobuf:"varint,6,req,name=summon_pt_old,json=summonPtOld" json:"summon_pt_old,omitempty"`
	SummonPtDailyAcc     *uint32           `protobuf:"varint,7,req,name=summon_pt_daily_acc,json=summonPtDailyAcc" json:"summon_pt_daily_acc,omitempty"`
	SummonPtOldDailyAcc  *uint32           `protobuf:"varint,8,req,name=summon_pt_old_daily_acc,json=summonPtOldDailyAcc" json:"summon_pt_old_daily_acc,omitempty"`
	SummonFree           *uint32           `protobuf:"varint,9,req,name=summon_free,json=summonFree" json:"summon_free,omitempty"`
	AutoFightFinishTime  *uint32           `protobuf:"varint,10,req,name=auto_fight_finish_time,json=autoFightFinishTime" json:"auto_fight_finish_time,omitempty"`
	DefaultBossId        *uint32           `protobuf:"varint,11,req,name=default_boss_id,json=defaultBossId" json:"default_boss_id,omitempty"`
	AutoFightMaxDamage   *uint32           `protobuf:"varint,12,req,name=auto_fight_max_damage,json=autoFightMaxDamage" json:"auto_fight_max_damage,omitempty"`
	GuildSupport         *uint32           `protobuf:"varint,13,req,name=guild_support,json=guildSupport" json:"guild_support,omitempty"`
	FriendSupport        *uint32           `protobuf:"varint,14,req,name=friend_support,json=friendSupport" json:"friend_support,omitempty"`
	WorldSupport         *uint32           `protobuf:"varint,15,req,name=world_support,json=worldSupport" json:"world_support,omitempty"`
}

func (x *SC_34502) Reset() {
	*x = SC_34502{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SC_34502_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SC_34502) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_34502) ProtoMessage() {}

func (x *SC_34502) ProtoReflect() protoreflect.Message {
	mi := &file_SC_34502_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_34502.ProtoReflect.Descriptor instead.
func (*SC_34502) Descriptor() ([]byte, []int) {
	return file_SC_34502_proto_rawDescGZIP(), []int{0}
}

func (x *SC_34502) GetFightCount() uint32 {
	if x != nil && x.FightCount != nil {
		return *x.FightCount
	}
	return 0
}

func (x *SC_34502) GetFightCountUpdateTime() uint32 {
	if x != nil && x.FightCountUpdateTime != nil {
		return *x.FightCountUpdateTime
	}
	return 0
}

func (x *SC_34502) GetSelfBoss() *WORLDBOSS_INFO {
	if x != nil {
		return x.SelfBoss
	}
	return nil
}

func (x *SC_34502) GetOtherBoss() []*WORLDBOSS_INFO {
	if x != nil {
		return x.OtherBoss
	}
	return nil
}

func (x *SC_34502) GetSummonPt() uint32 {
	if x != nil && x.SummonPt != nil {
		return *x.SummonPt
	}
	return 0
}

func (x *SC_34502) GetSummonPtOld() uint32 {
	if x != nil && x.SummonPtOld != nil {
		return *x.SummonPtOld
	}
	return 0
}

func (x *SC_34502) GetSummonPtDailyAcc() uint32 {
	if x != nil && x.SummonPtDailyAcc != nil {
		return *x.SummonPtDailyAcc
	}
	return 0
}

func (x *SC_34502) GetSummonPtOldDailyAcc() uint32 {
	if x != nil && x.SummonPtOldDailyAcc != nil {
		return *x.SummonPtOldDailyAcc
	}
	return 0
}

func (x *SC_34502) GetSummonFree() uint32 {
	if x != nil && x.SummonFree != nil {
		return *x.SummonFree
	}
	return 0
}

func (x *SC_34502) GetAutoFightFinishTime() uint32 {
	if x != nil && x.AutoFightFinishTime != nil {
		return *x.AutoFightFinishTime
	}
	return 0
}

func (x *SC_34502) GetDefaultBossId() uint32 {
	if x != nil && x.DefaultBossId != nil {
		return *x.DefaultBossId
	}
	return 0
}

func (x *SC_34502) GetAutoFightMaxDamage() uint32 {
	if x != nil && x.AutoFightMaxDamage != nil {
		return *x.AutoFightMaxDamage
	}
	return 0
}

func (x *SC_34502) GetGuildSupport() uint32 {
	if x != nil && x.GuildSupport != nil {
		return *x.GuildSupport
	}
	return 0
}

func (x *SC_34502) GetFriendSupport() uint32 {
	if x != nil && x.FriendSupport != nil {
		return *x.FriendSupport
	}
	return 0
}

func (x *SC_34502) GetWorldSupport() uint32 {
	if x != nil && x.WorldSupport != nil {
		return *x.WorldSupport
	}
	return 0
}

var File_SC_34502_proto protoreflect.FileDescriptor

var file_SC_34502_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x33, 0x34, 0x35, 0x30, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x1a, 0x14, 0x57, 0x4f, 0x52, 0x4c, 0x44,
	0x42, 0x4f, 0x53, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x98, 0x05, 0x0a, 0x08, 0x53, 0x43, 0x5f, 0x33, 0x34, 0x35, 0x30, 0x32, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x0a, 0x66, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a,
	0x17, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x14,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x62, 0x6f, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73,
	0x74, 0x2e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x42, 0x4f, 0x53, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x42, 0x6f, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x65, 0x6c, 0x66, 0x61, 0x73, 0x74, 0x2e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x42, 0x4f,
	0x53, 0x53, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x6f,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x74, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x74, 0x5f, 0x6f, 0x6c, 0x64,
	0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x74,
	0x4f, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x74,
	0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x10, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x41,
	0x63, 0x63, 0x12, 0x34, 0x0a, 0x17, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x74, 0x5f,
	0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x18, 0x08, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x74, 0x4f, 0x6c, 0x64,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x42, 0x6f, 0x73, 0x73, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x4d, 0x61, 0x78, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0c, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0e, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
}

var (
	file_SC_34502_proto_rawDescOnce sync.Once
	file_SC_34502_proto_rawDescData = file_SC_34502_proto_rawDesc
)

func file_SC_34502_proto_rawDescGZIP() []byte {
	file_SC_34502_proto_rawDescOnce.Do(func() {
		file_SC_34502_proto_rawDescData = protoimpl.X.CompressGZIP(file_SC_34502_proto_rawDescData)
	})
	return file_SC_34502_proto_rawDescData
}

var file_SC_34502_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_SC_34502_proto_goTypes = []interface{}{
	(*SC_34502)(nil),       // 0: belfast.SC_34502
	(*WORLDBOSS_INFO)(nil), // 1: belfast.WORLDBOSS_INFO
}
var file_SC_34502_proto_depIdxs = []int32{
	1, // 0: belfast.SC_34502.self_boss:type_name -> belfast.WORLDBOSS_INFO
	1, // 1: belfast.SC_34502.other_boss:type_name -> belfast.WORLDBOSS_INFO
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_SC_34502_proto_init() }
func file_SC_34502_proto_init() {
	if File_SC_34502_proto != nil {
		return
	}
	file_WORLDBOSS_INFO_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_SC_34502_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SC_34502); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SC_34502_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SC_34502_proto_goTypes,
		DependencyIndexes: file_SC_34502_proto_depIdxs,
		MessageInfos:      file_SC_34502_proto_msgTypes,
	}.Build()
	File_SC_34502_proto = out.File
	file_SC_34502_proto_rawDesc = nil
	file_SC_34502_proto_goTypes = nil
	file_SC_34502_proto_depIdxs = nil
}
